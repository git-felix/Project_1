The initial/draft version, ideas, pseudocodes, discussion of problems / difficulties, etc.
1. First of all, the costraints need to be considered:
  Constraint 1: rope’s length is constant => Lrope = Lhorizontal + Lvertical = x1 – x2 + y1 – y3 = const.
                And thus x1'' - x2'' + y1'' - y3'' = a1 - a2 - a3y = 0
  Constraint 2: M3 cannot leave the hole in M1 => x1 = x3 => x1'' = x3''  => a1 = a3x

2. Secondly, we should consider all the forces, i.e. draw the objects (or initialize them as points) and draw the acting forces:
  The result will be very similar to the Quiz_03 drawings, except for the friction forces directed to the opposite directions of the objects movements

3. Finally, we will write down the Newton's law for each proper axis of each object and get the relation amond the accelerations of bodies

4. After all is done, we can start writing the pseudocode or the plan of code:
  Each body should have at least: mass, acceleration, x-coordinate, y-coordinate. May be they also should have the forces acting on them separately as a variables, too.
  As I think now, we will have an array for the force F, i.e. we will record the value of F0, F1,..., Fn and fill it in array force[] everytime we get to the next t(i), where i goes from 0 to n.
  We also need to have a separate function that is going to change the positions of bodies, i.e. update their coordinates after each t(i)

5. Difficult parts and things to consider:
  1) dealing with values of bodies' masses and the bodies' frictions - we need to make a possibility to change the sizes and still get reasonable results
  2) dealing with timing - at each timepoint we should have status update in order to have an access to the current positions of the bodies at any moment of the time
  3) dealing with bodies positions - as we will report the positions of each body at each timepoint, we need to add coordinates to them and always update them
  4) most probably we have to use 'for' or 'while' loops in order to track all the movements, update the positions, accelerations, etc.
  5) keeping track of the Force at each time period, i.e. F0, F1,..., Fn for t0, t1,..., tn.
  6) dealing with the pully, whether we need to consider it as part of M1 or a separate body M0 with no mass.

After all these points will be considered and finalized, the coding part can be started. The other details will become more clear during the OOP structure creation.